name: Version Bump

on:
  push:
    branches:
      - main

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures we fetch all tags

      - name: Get latest version
        id: get_version
        run: |
          if [ ! -f VERSION ]; then
            echo "0.1.0" > VERSION
          fi
          echo "CURRENT_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Determine version bump
        id: version_bump
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 $GITHUB_SHA)
          VERSION=$(cat VERSION)
          
          # Extract major, minor, patch
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          if echo "$COMMIT_MSG" | grep -qE '^major:'; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif echo "$COMMIT_MSG" | grep -qE '^minor:'; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif echo "$COMMIT_MSG" | grep -qE '^patch:'; then
            PATCH=$((PATCH + 1))
          else
            echo "No version bump keyword found, skipping."
            exit 0
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          echo "$NEW_VERSION" > VERSION
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push new version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add VERSION
          git commit -m "Bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          generate_release_notes: true
